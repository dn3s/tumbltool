#!/usr/bin/perl
#    TUMBLTOOL! Test and deploy Tumblr themes with ease!
#    Copyright (C) 2015 Devon Sawatzky.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
use strict;
#use warnings;
use JSON;
use Getopt::Long;
use TumblTool::ThemeParser;
use TumblTool::Preview;
use TumblTool::Bundle;
use TumblTool::PathUtils;
use TumblTool::DataURI;
use TumblTool::Slurp;
use TumblTool::Fail;
use TumblTool::ImageURL;
my $command = shift(); #command comes first, not subject to Getopt stuff
#here are a couple chances to bail out before doing anything
fail("No command spefified!") if(!$command);
fail() if($command eq "help");
fail("Unknown command: \"$command\"\n") if(!($command eq "preview" or $command eq "bundle"));
#OK lets get started
my $content   = 'default';
my $dataURI   = '';
my $includes  = [];
my $inline    = '';
my $strip     = '';
my $themeFile = '';
my $vars      = {};
GetOptions(
	"includes|i=s{1,}" =>  $includes,
	"content|c=s"      => \$content,
	"dataURI|d"        => \$dataURI,
	"inline|l!"        => \$inline,
	"strip|s!"         => \$strip,
	"var|v=s%"         => \$vars,
	"theme|t=s"        => \$themeFile,
) or fail();
#configure the modules according to CLI options
my $theme=parseTheme(slurp($themeFile, $strip));
my $contentRoot=getContentDir($content);
TumblTool::ImageURL::configure({"contentRoot"=>$contentRoot, "dataURI"=>$inline});
TumblTool::Preview::configure({"includes"=>$includes, "inline"=>$inline, "strip"=>$strip, "contentRoot"=>$contentRoot});
TumblTool::Bundle::configure({"includes"=>$includes, "inline"=>$inline, "strip"=>$strip});
if($command eq "preview") {
	my $content=decode_json(slurp(getContentFile($content)));
	my $out=render($theme,$content);
	$out=dataURI("text/html", $out) if($dataURI);
	print("$out\n");
}
elsif($command eq "bundle") {
	fail("Invalid Option: --dataURI doens't make sense for bundle") if($dataURI);
	fail("Invalid Option: --content doesn't make sense for bundle") if($content and !($content eq "default"));
	my $out=(bundle($theme));
	print("$out\n");
}
exit(0);
