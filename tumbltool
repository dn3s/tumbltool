#!/usr/bin/perl
#    TUMBLTOOL! Test and deploy Tumblr themes with ease!
#    Copyright (C) 2015 Devon Sawatzky.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
use strict;
use warnings;
use JSON;
use MIME::Base64;
use Getopt::Long;
use TumblTool::ThemeParser;
use TumblTool::Preview;
use TumblTool::Bundle;
use TumblTool::PathUtils;
use TumblTool::Slurp;
#use sTre4M oF CoNCiOUsN3SS-StYLe C0mMeENTs (srry);
my $command=shift(); #command comes first, not subject to Getopt stuff
my $content='default';
my $dataURI='';
my $include=[];
my $inline='';
my $strip='';
my $theme='';
my $help='';
my $vars={};
#Getopt::Long::Configure("bundling");
GetOptions(
	"include|i=s{1,}" => $include,
	"content|c=s" => \$content,
	"dataURI|d" => \$dataURI,
	"inline|l!" => \$inline,
	"strip|s!" => \$strip,
	"var|v=s%" => \$vars,
	"theme|t=s" => \$theme,
	"help|h|?" => \$help
) or die; #TODO: snag the last arg as theme if it exists
if($command eq "preview") {
	my $content=decode_json(slurp(getContentFile($content)));
	if($dataURI) {
		print("data:text/html;base64,");
		print(encode_base64(render(parseTheme(slurp($theme, $strip)),$content,$include,$inline,$strip),""));
	}
	else {
		print(render(parseTheme(slurp($theme, $strip)),$content,$include,$inline,$strip));
	}
	print("\n");
}
elsif($command eq "bundle") {
	print(bundle(parseTheme(slurp($theme, $strip)),$include,$inline,$strip));
	print("\n");
}
elsif($command eq "help") {
	fail();
}
elsif($command eq "") {
	fail("No command spefified!");
}
else {
	fail("Unknown command: \"$command\"\n");
}
sub fail
{
	my $message=shift();
	if($message){
		print("Fatal Error: $message\n");
	}
	print qq{
usage: tumbltool <COMMAND> [OPTIONS]

Test and deploy tumblr themes with ease!

Commands:
preview
                    Print an example page using the theme specified
                    in FILE, filled with example material from a
                    JSON file (see -content)
bundle
                    Bundle up a theme with any needed assets
                    into a single file to be pasted into Tumblr.
                    Useful for a sort of ghetto deployment system.
help
                    Show this help text and exit.
Options:
-c --content: <FILE>
                    specify content to populate the
                    rendered preview page.
-d --dataURI
                    format output as a base64-encoded
                    data URI, meant for piping into a browser (or
                    sending a link to clients I guess)
-i --include: <FILES>
                    specify CSS or Javscript file(s)
                    to add to the theme, included at the special
                    {tumbltool_includes} tag in your theme file
                    (so make sure to add it, presumably at the
                    end of your theme's <head>. Multiple files
                    can be specified as a space-separated list,
                    or this argument can be added multiple
                    times. You can supply absolute paths,
                    relative paths, or URIs.
-l --inline:
                    Include all local files (not URIs though)
                    inline, using <script> or <style> tags,
                    so the preview or bundle is a single,
                    self-contained file. Handy for one-step
                    deployment, but may hurt performance
                    since browsers won't cache stylesheets.
-s --strip
                    Remove unnecessary whitespace. Useful
                    for keeping file sizes down and ease
                    of sharing.
-v --var ATTRIBUTE=VALUE
                    Specify custom variables you may have
                    in your theme. (Not yet implemented)
-t --theme FILE
                    Specify the theme file to
                    preview/bundle.
}
}
